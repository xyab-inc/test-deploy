name: Deploy Stack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  GHCR_USER: "ed-baker"

jobs:
  # Detect changed apps
  short-sha:
    name: Get short SHA
    runs-on: [self-hosted]
    outputs:
      commit_ref: ${{ steps.sha.outputs.short }}
    steps:
      - name: Get short SHA
        id: sha
        run: echo "short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

  detect-changes:
    name: Detect Changed Apps
    needs: short-sha
    runs-on: [self-hosted, linux, builder]
    outputs:
      coincrunch_changed: ${{ steps.filter.outputs.coincrunch }}
      multisite_changed: ${{ steps.filter.outputs.multisite }}
      #is_tag: ${{ startsWith(github.ref, 'refs/tags/') }}
      #tag_name: ${{ steps.get_tag.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v3
      
      # - name: Get tag name
      #   id: get_tag
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            coincrunch:
              - 'php/coincrunch/**'
              - 'php/libs/**'
            multisite:
              - 'laravel/**'
            seedtable-go:
              - 'go/seedtable/**'

      - uses: ./.github/actions/parse-server-config
        id: config
        with:
          config-file: deploy/config.yml
          host-name: multisite-prod
      
      - name: Use the outputs
        run: |
          echo "IP: ${{ steps.config.outputs.ip }}"
          echo "Port: ${{ steps.config.outputs.port }}"
          echo "User: ${{ steps.config.outputs.user }}"
          echo "Compose Path: ${{ steps.config.outputs.compose-path }}"

  # Build Multisite
  build-multisite:
    name: Build Multisite
    runs-on: [self-hosted, linux]
    needs: detect-changes
    if: needs.detect-changes.outputs.multisite_changed == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}
      
  #     - name: Extract metadata
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         images: ghcr.io/${{ github.repository }}/
  #         tags: |
  #           type=raw,value=${{ github.sha }}
  #           type=raw,value=${{ needs.short-sha.outputs.commit_ref }}

        #type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
        #type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
      
      # - name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ./php/coincrunch
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

  deploy-staging:
    environment: staging
    #runs-on: ubuntu-latest
    needs: short-sha
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Deploy test to Staging
        uses: ./.github/actions/docker-deploy
        with:
          ssh_user: root
          ssh_key: ${{ secrets.RUNNER_PRIVATE_KEY }}
          ssh_host: "5.161.211.186"
          compose_file: my-docker-compose.yml
          docker_tag: ${{ needs.short-sha.outputs.commit_ref }}
